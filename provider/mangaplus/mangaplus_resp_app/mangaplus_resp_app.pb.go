// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: proto/mangaplus_resp_app.proto

package mangaplus_resp_app

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Lang int32

const (
	Lang_LANG_ENGLISH    Lang = 0
	Lang_LANG_SPANISH    Lang = 1
	Lang_LANG_FRENCH     Lang = 2
	Lang_LANG_INDONESIAN Lang = 3
	Lang_LANG_PORTUGUESE Lang = 4
	Lang_LANG_RUSSIAN    Lang = 5
	Lang_LANG_THAI       Lang = 6
	Lang_LANG_GERMAN     Lang = 7
	Lang_LANG_VIETNAMESE Lang = 9
)

// Enum value maps for Lang.
var (
	Lang_name = map[int32]string{
		0: "LANG_ENGLISH",
		1: "LANG_SPANISH",
		2: "LANG_FRENCH",
		3: "LANG_INDONESIAN",
		4: "LANG_PORTUGUESE",
		5: "LANG_RUSSIAN",
		6: "LANG_THAI",
		7: "LANG_GERMAN",
		9: "LANG_VIETNAMESE",
	}
	Lang_value = map[string]int32{
		"LANG_ENGLISH":    0,
		"LANG_SPANISH":    1,
		"LANG_FRENCH":     2,
		"LANG_INDONESIAN": 3,
		"LANG_PORTUGUESE": 4,
		"LANG_RUSSIAN":    5,
		"LANG_THAI":       6,
		"LANG_GERMAN":     7,
		"LANG_VIETNAMESE": 9,
	}
)

func (x Lang) Enum() *Lang {
	p := new(Lang)
	*p = x
	return p
}

func (x Lang) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Lang) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mangaplus_resp_app_proto_enumTypes[0].Descriptor()
}

func (Lang) Type() protoreflect.EnumType {
	return &file_proto_mangaplus_resp_app_proto_enumTypes[0]
}

func (x Lang) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Lang.Descriptor instead.
func (Lang) EnumDescriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{0}
}

type MangaViewer_Page_MangaPage_Type int32

const (
	MangaViewer_Page_MangaPage_SINGLE MangaViewer_Page_MangaPage_Type = 0
	MangaViewer_Page_MangaPage_LEFT   MangaViewer_Page_MangaPage_Type = 1
	MangaViewer_Page_MangaPage_RIGHT  MangaViewer_Page_MangaPage_Type = 2
	MangaViewer_Page_MangaPage_DOUBLE MangaViewer_Page_MangaPage_Type = 3
)

// Enum value maps for MangaViewer_Page_MangaPage_Type.
var (
	MangaViewer_Page_MangaPage_Type_name = map[int32]string{
		0: "SINGLE",
		1: "LEFT",
		2: "RIGHT",
		3: "DOUBLE",
	}
	MangaViewer_Page_MangaPage_Type_value = map[string]int32{
		"SINGLE": 0,
		"LEFT":   1,
		"RIGHT":  2,
		"DOUBLE": 3,
	}
)

func (x MangaViewer_Page_MangaPage_Type) Enum() *MangaViewer_Page_MangaPage_Type {
	p := new(MangaViewer_Page_MangaPage_Type)
	*p = x
	return p
}

func (x MangaViewer_Page_MangaPage_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MangaViewer_Page_MangaPage_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mangaplus_resp_app_proto_enumTypes[1].Descriptor()
}

func (MangaViewer_Page_MangaPage_Type) Type() protoreflect.EnumType {
	return &file_proto_mangaplus_resp_app_proto_enumTypes[1]
}

func (x MangaViewer_Page_MangaPage_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MangaViewer_Page_MangaPage_Type.Descriptor instead.
func (MangaViewer_Page_MangaPage_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{13, 0, 0, 0}
}

type TitleDetailView_UpdateTiming int32

const (
	TitleDetailView_NOT_REGULARLY TitleDetailView_UpdateTiming = 0
	TitleDetailView_MONDAY        TitleDetailView_UpdateTiming = 1
	TitleDetailView_TUESDAY       TitleDetailView_UpdateTiming = 2
	TitleDetailView_WEDNESDAY     TitleDetailView_UpdateTiming = 3
	TitleDetailView_THURSDAY      TitleDetailView_UpdateTiming = 4
	TitleDetailView_FRIDAY        TitleDetailView_UpdateTiming = 5
	TitleDetailView_SATURDAY      TitleDetailView_UpdateTiming = 6
	TitleDetailView_SUNDAY        TitleDetailView_UpdateTiming = 7
	TitleDetailView_DAY           TitleDetailView_UpdateTiming = 8
)

// Enum value maps for TitleDetailView_UpdateTiming.
var (
	TitleDetailView_UpdateTiming_name = map[int32]string{
		0: "NOT_REGULARLY",
		1: "MONDAY",
		2: "TUESDAY",
		3: "WEDNESDAY",
		4: "THURSDAY",
		5: "FRIDAY",
		6: "SATURDAY",
		7: "SUNDAY",
		8: "DAY",
	}
	TitleDetailView_UpdateTiming_value = map[string]int32{
		"NOT_REGULARLY": 0,
		"MONDAY":        1,
		"TUESDAY":       2,
		"WEDNESDAY":     3,
		"THURSDAY":      4,
		"FRIDAY":        5,
		"SATURDAY":      6,
		"SUNDAY":        7,
		"DAY":           8,
	}
)

func (x TitleDetailView_UpdateTiming) Enum() *TitleDetailView_UpdateTiming {
	p := new(TitleDetailView_UpdateTiming)
	*p = x
	return p
}

func (x TitleDetailView_UpdateTiming) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleDetailView_UpdateTiming) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mangaplus_resp_app_proto_enumTypes[2].Descriptor()
}

func (TitleDetailView_UpdateTiming) Type() protoreflect.EnumType {
	return &file_proto_mangaplus_resp_app_proto_enumTypes[2]
}

func (x TitleDetailView_UpdateTiming) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleDetailView_UpdateTiming.Descriptor instead.
func (TitleDetailView_UpdateTiming) EnumDescriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{23, 0}
}

type TitleDetailView_Rating int32

const (
	TitleDetailView_ALLAGE   TitleDetailView_Rating = 0
	TitleDetailView_TEEN     TitleDetailView_Rating = 1
	TitleDetailView_TEENPLUS TitleDetailView_Rating = 2
	TitleDetailView_MATURE   TitleDetailView_Rating = 3
)

// Enum value maps for TitleDetailView_Rating.
var (
	TitleDetailView_Rating_name = map[int32]string{
		0: "ALLAGE",
		1: "TEEN",
		2: "TEENPLUS",
		3: "MATURE",
	}
	TitleDetailView_Rating_value = map[string]int32{
		"ALLAGE":   0,
		"TEEN":     1,
		"TEENPLUS": 2,
		"MATURE":   3,
	}
)

func (x TitleDetailView_Rating) Enum() *TitleDetailView_Rating {
	p := new(TitleDetailView_Rating)
	*p = x
	return p
}

func (x TitleDetailView_Rating) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleDetailView_Rating) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mangaplus_resp_app_proto_enumTypes[3].Descriptor()
}

func (TitleDetailView_Rating) Type() protoreflect.EnumType {
	return &file_proto_mangaplus_resp_app_proto_enumTypes[3]
}

func (x TitleDetailView_Rating) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleDetailView_Rating.Descriptor instead.
func (TitleDetailView_Rating) EnumDescriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{23, 1}
}

type Sns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Sns) Reset() {
	*x = Sns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sns) ProtoMessage() {}

func (x *Sns) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sns.ProtoReflect.Descriptor instead.
func (*Sns) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{0}
}

func (x *Sns) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Sns) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Banner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageBanner string `protobuf:"bytes,1,opt,name=imageBanner,proto3" json:"imageBanner,omitempty"`
	Sns         *Sns   `protobuf:"bytes,2,opt,name=sns,proto3" json:"sns,omitempty"`
	ViewCount   int32  `protobuf:"varint,3,opt,name=viewCount,proto3" json:"viewCount,omitempty"`
}

func (x *Banner) Reset() {
	*x = Banner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Banner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Banner) ProtoMessage() {}

func (x *Banner) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Banner.ProtoReflect.Descriptor instead.
func (*Banner) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{1}
}

func (x *Banner) GetImageBanner() string {
	if x != nil {
		return x.ImageBanner
	}
	return ""
}

func (x *Banner) GetSns() *Sns {
	if x != nil {
		return x.Sns
	}
	return nil
}

func (x *Banner) GetViewCount() int32 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

type Count struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language Lang  `protobuf:"varint,1,opt,name=language,proto3,enum=mangaplus_resp_app.Lang" json:"language,omitempty"`
	Titles   int32 `protobuf:"varint,2,opt,name=titles,proto3" json:"titles,omitempty"`
}

func (x *Count) Reset() {
	*x = Count{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Count) ProtoMessage() {}

func (x *Count) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Count.ProtoReflect.Descriptor instead.
func (*Count) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{2}
}

func (x *Count) GetLanguage() Lang {
	if x != nil {
		return x.Language
	}
	return Lang_LANG_ENGLISH
}

func (x *Count) GetTitles() int32 {
	if x != nil {
		return x.Titles
	}
	return 0
}

type Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId         uint32 `protobuf:"varint,1,opt,name=titleId,proto3" json:"titleId,omitempty"`
	ChapterId       uint32 `protobuf:"varint,2,opt,name=chapterId,proto3" json:"chapterId,omitempty"`
	TitleName       string `protobuf:"bytes,3,opt,name=titleName,proto3" json:"titleName,omitempty"`
	ChapterSubTitle string `protobuf:"bytes,4,opt,name=chapterSubTitle,proto3" json:"chapterSubTitle,omitempty"`
	ThumbnailUrl    string `protobuf:"bytes,5,opt,name=thumbnailUrl,proto3" json:"thumbnailUrl,omitempty"`
	StartTimeStamp  string `protobuf:"bytes,6,opt,name=startTimeStamp,proto3" json:"startTimeStamp,omitempty"`
	EndTimeStamp    string `protobuf:"bytes,7,opt,name=endTimeStamp,proto3" json:"endTimeStamp,omitempty"`
	AlreadyViewed   bool   `protobuf:"varint,8,opt,name=alreadyViewed,proto3" json:"alreadyViewed,omitempty"`
	IsVerticalOnly  bool   `protobuf:"varint,9,opt,name=isVerticalOnly,proto3" json:"isVerticalOnly,omitempty"`
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{3}
}

func (x *Chapter) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *Chapter) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *Chapter) GetTitleName() string {
	if x != nil {
		return x.TitleName
	}
	return ""
}

func (x *Chapter) GetChapterSubTitle() string {
	if x != nil {
		return x.ChapterSubTitle
	}
	return ""
}

func (x *Chapter) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *Chapter) GetStartTimeStamp() string {
	if x != nil {
		return x.StartTimeStamp
	}
	return ""
}

func (x *Chapter) GetEndTimeStamp() string {
	if x != nil {
		return x.EndTimeStamp
	}
	return ""
}

func (x *Chapter) GetAlreadyViewed() bool {
	if x != nil {
		return x.AlreadyViewed
	}
	return false
}

func (x *Chapter) GetIsVerticalOnly() bool {
	if x != nil {
		return x.IsVerticalOnly
	}
	return false
}

type Title struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId        uint32 `protobuf:"varint,1,opt,name=titleId,proto3" json:"titleId,omitempty"`
	TitleName      string `protobuf:"bytes,2,opt,name=titleName,proto3" json:"titleName,omitempty"`
	Author         string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	ImagePortrait  string `protobuf:"bytes,4,opt,name=imagePortrait,proto3" json:"imagePortrait,omitempty"`
	ImageLandscape string `protobuf:"bytes,5,opt,name=imageLandscape,proto3" json:"imageLandscape,omitempty"`
	ViewCount      uint32 `protobuf:"varint,6,opt,name=viewCount,proto3" json:"viewCount,omitempty"`
	Language       Lang   `protobuf:"varint,7,opt,name=language,proto3,enum=mangaplus_resp_app.Lang" json:"language,omitempty"`
}

func (x *Title) Reset() {
	*x = Title{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Title) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Title) ProtoMessage() {}

func (x *Title) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Title.ProtoReflect.Descriptor instead.
func (*Title) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{4}
}

func (x *Title) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *Title) GetTitleName() string {
	if x != nil {
		return x.TitleName
	}
	return ""
}

func (x *Title) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Title) GetImagePortrait() string {
	if x != nil {
		return x.ImagePortrait
	}
	return ""
}

func (x *Title) GetImageLandscape() string {
	if x != nil {
		return x.ImageLandscape
	}
	return ""
}

func (x *Title) GetViewCount() uint32 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *Title) GetLanguage() Lang {
	if x != nil {
		return x.Language
	}
	return Lang_LANG_ENGLISH
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Items []*Title `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{5}
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetItems() []*Title {
	if x != nil {
		return x.Items
	}
	return nil
}

// Views
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *SuccessResult `protobuf:"bytes,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   *ErrorResult   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{6}
}

func (x *Response) GetSuccess() *SuccessResult {
	if x != nil {
		return x.Success
	}
	return nil
}

func (x *Response) GetError() *ErrorResult {
	if x != nil {
		return x.Error
	}
	return nil
}

type ErrorResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default     *ErrorResult_Item   `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	Display     *ErrorResult_Item   `protobuf:"bytes,3,opt,name=display,proto3" json:"display,omitempty"`
	AllLanguage []*ErrorResult_Item `protobuf:"bytes,5,rep,name=allLanguage,proto3" json:"allLanguage,omitempty"`
}

func (x *ErrorResult) Reset() {
	*x = ErrorResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResult) ProtoMessage() {}

func (x *ErrorResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResult.ProtoReflect.Descriptor instead.
func (*ErrorResult) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{7}
}

func (x *ErrorResult) GetDefault() *ErrorResult_Item {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *ErrorResult) GetDisplay() *ErrorResult_Item {
	if x != nil {
		return x.Display
	}
	return nil
}

func (x *ErrorResult) GetAllLanguage() []*ErrorResult_Item {
	if x != nil {
		return x.AllLanguage
	}
	return nil
}

type SuccessResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFeaturedUpdated bool          `protobuf:"varint,1,opt,name=isFeaturedUpdated,proto3" json:"isFeaturedUpdated,omitempty"`
	RegisterView      *RegisterView `protobuf:"bytes,2,opt,name=registerView,proto3" json:"registerView,omitempty"`
	// registerationData = 3;
	FeaturedView *FeaturedView `protobuf:"bytes,4,opt,name=featuredView,proto3" json:"featuredView,omitempty"`
	// allTitlesView = 5;
	RankingView          *RankingView          `protobuf:"bytes,6,opt,name=rankingView,proto3" json:"rankingView,omitempty"`
	SubscribedTitlesView *SubscribedTitlesView `protobuf:"bytes,7,opt,name=subscribedTitlesView,proto3" json:"subscribedTitlesView,omitempty"`
	TitleDetailView      *TitleDetailView      `protobuf:"bytes,8,opt,name=titleDetailView,proto3" json:"titleDetailView,omitempty"`
	CommentView          *CommentView          `protobuf:"bytes,9,opt,name=commentView,proto3" json:"commentView,omitempty"`
	MangaViewer          *MangaViewer          `protobuf:"bytes,10,opt,name=mangaViewer,proto3" json:"mangaViewer,omitempty"`
	// webHomeView = 11;
	ProfileView       *ProfileView       `protobuf:"bytes,13,opt,name=profileView,proto3" json:"profileView,omitempty"`
	UpdateProfileView *UpdateProfileView `protobuf:"bytes,14,opt,name=updateProfileView,proto3" json:"updateProfileView,omitempty"`
	HomeView          *HomeView          `protobuf:"bytes,24,opt,name=homeView,proto3" json:"homeView,omitempty"`
	AllView           *AllView           `protobuf:"bytes,25,opt,name=allView,proto3" json:"allView,omitempty"`
	SettingsView      *SettingsView      `protobuf:"bytes,26,opt,name=settingsView,proto3" json:"settingsView,omitempty"`
	InitView          *InitView          `protobuf:"bytes,28,opt,name=initView,proto3" json:"initView,omitempty"`
	ContentView       *ContentView       `protobuf:"bytes,29,opt,name=contentView,proto3" json:"contentView,omitempty"`
	FreeTitlesView    *FreeTitlesView    `protobuf:"bytes,33,opt,name=freeTitlesView,proto3" json:"freeTitlesView,omitempty"`
}

func (x *SuccessResult) Reset() {
	*x = SuccessResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResult) ProtoMessage() {}

func (x *SuccessResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResult.ProtoReflect.Descriptor instead.
func (*SuccessResult) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{8}
}

func (x *SuccessResult) GetIsFeaturedUpdated() bool {
	if x != nil {
		return x.IsFeaturedUpdated
	}
	return false
}

func (x *SuccessResult) GetRegisterView() *RegisterView {
	if x != nil {
		return x.RegisterView
	}
	return nil
}

func (x *SuccessResult) GetFeaturedView() *FeaturedView {
	if x != nil {
		return x.FeaturedView
	}
	return nil
}

func (x *SuccessResult) GetRankingView() *RankingView {
	if x != nil {
		return x.RankingView
	}
	return nil
}

func (x *SuccessResult) GetSubscribedTitlesView() *SubscribedTitlesView {
	if x != nil {
		return x.SubscribedTitlesView
	}
	return nil
}

func (x *SuccessResult) GetTitleDetailView() *TitleDetailView {
	if x != nil {
		return x.TitleDetailView
	}
	return nil
}

func (x *SuccessResult) GetCommentView() *CommentView {
	if x != nil {
		return x.CommentView
	}
	return nil
}

func (x *SuccessResult) GetMangaViewer() *MangaViewer {
	if x != nil {
		return x.MangaViewer
	}
	return nil
}

func (x *SuccessResult) GetProfileView() *ProfileView {
	if x != nil {
		return x.ProfileView
	}
	return nil
}

func (x *SuccessResult) GetUpdateProfileView() *UpdateProfileView {
	if x != nil {
		return x.UpdateProfileView
	}
	return nil
}

func (x *SuccessResult) GetHomeView() *HomeView {
	if x != nil {
		return x.HomeView
	}
	return nil
}

func (x *SuccessResult) GetAllView() *AllView {
	if x != nil {
		return x.AllView
	}
	return nil
}

func (x *SuccessResult) GetSettingsView() *SettingsView {
	if x != nil {
		return x.SettingsView
	}
	return nil
}

func (x *SuccessResult) GetInitView() *InitView {
	if x != nil {
		return x.InitView
	}
	return nil
}

func (x *SuccessResult) GetContentView() *ContentView {
	if x != nil {
		return x.ContentView
	}
	return nil
}

func (x *SuccessResult) GetFreeTitlesView() *FreeTitlesView {
	if x != nil {
		return x.FreeTitlesView
	}
	return nil
}

type ContentView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default Lang     `protobuf:"varint,1,opt,name=default,proto3,enum=mangaplus_resp_app.Lang" json:"default,omitempty"`
	Display Lang     `protobuf:"varint,3,opt,name=display,proto3,enum=mangaplus_resp_app.Lang" json:"display,omitempty"`
	Counts  []*Count `protobuf:"bytes,5,rep,name=counts,proto3" json:"counts,omitempty"`
}

func (x *ContentView) Reset() {
	*x = ContentView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentView) ProtoMessage() {}

func (x *ContentView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentView.ProtoReflect.Descriptor instead.
func (*ContentView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{9}
}

func (x *ContentView) GetDefault() Lang {
	if x != nil {
		return x.Default
	}
	return Lang_LANG_ENGLISH
}

func (x *ContentView) GetDisplay() Lang {
	if x != nil {
		return x.Display
	}
	return Lang_LANG_ENGLISH
}

func (x *ContentView) GetCounts() []*Count {
	if x != nil {
		return x.Counts
	}
	return nil
}

// -> /api/title_list/bookmark (GET)
type SubscribedTitlesView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titles []*Title `protobuf:"bytes,1,rep,name=titles,proto3" json:"titles,omitempty"`
}

func (x *SubscribedTitlesView) Reset() {
	*x = SubscribedTitlesView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribedTitlesView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribedTitlesView) ProtoMessage() {}

func (x *SubscribedTitlesView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribedTitlesView.ProtoReflect.Descriptor instead.
func (*SubscribedTitlesView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{10}
}

func (x *SubscribedTitlesView) GetTitles() []*Title {
	if x != nil {
		return x.Titles
	}
	return nil
}

// -> /api/title_list/ranking
type RankingView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titles []*Title `protobuf:"bytes,1,rep,name=titles,proto3" json:"titles,omitempty"`
}

func (x *RankingView) Reset() {
	*x = RankingView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankingView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankingView) ProtoMessage() {}

func (x *RankingView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankingView.ProtoReflect.Descriptor instead.
func (*RankingView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{11}
}

func (x *RankingView) GetTitles() []*Title {
	if x != nil {
		return x.Titles
	}
	return nil
}

// -> /api/comment
type CommentView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titles []*Title `protobuf:"bytes,1,rep,name=titles,proto3" json:"titles,omitempty"`
}

func (x *CommentView) Reset() {
	*x = CommentView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentView) ProtoMessage() {}

func (x *CommentView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentView.ProtoReflect.Descriptor instead.
func (*CommentView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{12}
}

func (x *CommentView) GetTitles() []*Title {
	if x != nil {
		return x.Titles
	}
	return nil
}

// -> /api/manga_viewer
type MangaViewer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pages            []*MangaViewer_Page `protobuf:"bytes,1,rep,name=pages,proto3" json:"pages,omitempty"`
	ChapterId        uint32              `protobuf:"varint,2,opt,name=chapterId,proto3" json:"chapterId,omitempty"`
	Chapters         []*Chapter          `protobuf:"bytes,3,rep,name=chapters,proto3" json:"chapters,omitempty"`
	Sns              *Sns                `protobuf:"bytes,4,opt,name=sns,proto3" json:"sns,omitempty"`
	TitleName        string              `protobuf:"bytes,5,opt,name=titleName,proto3" json:"titleName,omitempty"`
	ChapterName      string              `protobuf:"bytes,6,opt,name=chapterName,proto3" json:"chapterName,omitempty"`
	NumberOfComments uint32              `protobuf:"varint,7,opt,name=numberOfComments,proto3" json:"numberOfComments,omitempty"`
	IsVerticalOnly   bool                `protobuf:"varint,8,opt,name=isVerticalOnly,proto3" json:"isVerticalOnly,omitempty"`
	TitleId          uint32              `protobuf:"varint,9,opt,name=titleId,proto3" json:"titleId,omitempty"`
	StartFromRight   bool                `protobuf:"varint,10,opt,name=startFromRight,proto3" json:"startFromRight,omitempty"`
	Country          string              `protobuf:"bytes,11,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *MangaViewer) Reset() {
	*x = MangaViewer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MangaViewer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaViewer) ProtoMessage() {}

func (x *MangaViewer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaViewer.ProtoReflect.Descriptor instead.
func (*MangaViewer) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{13}
}

func (x *MangaViewer) GetPages() []*MangaViewer_Page {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *MangaViewer) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *MangaViewer) GetChapters() []*Chapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *MangaViewer) GetSns() *Sns {
	if x != nil {
		return x.Sns
	}
	return nil
}

func (x *MangaViewer) GetTitleName() string {
	if x != nil {
		return x.TitleName
	}
	return ""
}

func (x *MangaViewer) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *MangaViewer) GetNumberOfComments() uint32 {
	if x != nil {
		return x.NumberOfComments
	}
	return 0
}

func (x *MangaViewer) GetIsVerticalOnly() bool {
	if x != nil {
		return x.IsVerticalOnly
	}
	return false
}

func (x *MangaViewer) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *MangaViewer) GetStartFromRight() bool {
	if x != nil {
		return x.StartFromRight
	}
	return false
}

func (x *MangaViewer) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

// -> /api/profile (GET)
type ProfileView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icons   []*ProfileView_Icon `protobuf:"bytes,1,rep,name=icons,proto3" json:"icons,omitempty"`
	Default *ProfileView_Icon   `protobuf:"bytes,3,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *ProfileView) Reset() {
	*x = ProfileView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileView) ProtoMessage() {}

func (x *ProfileView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileView.ProtoReflect.Descriptor instead.
func (*ProfileView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{14}
}

func (x *ProfileView) GetIcons() []*ProfileView_Icon {
	if x != nil {
		return x.Icons
	}
	return nil
}

func (x *ProfileView) GetDefault() *ProfileView_Icon {
	if x != nil {
		return x.Default
	}
	return nil
}

// -> /api/profile (POST)
type UpdateProfileView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateProfileView) Reset() {
	*x = UpdateProfileView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileView) ProtoMessage() {}

func (x *UpdateProfileView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileView.ProtoReflect.Descriptor instead.
func (*UpdateProfileView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateProfileView) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// -> /api/title_list/free_titles
type FreeTitlesView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titles []*FreeTitlesView_Item `protobuf:"bytes,1,rep,name=titles,proto3" json:"titles,omitempty"`
}

func (x *FreeTitlesView) Reset() {
	*x = FreeTitlesView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeTitlesView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeTitlesView) ProtoMessage() {}

func (x *FreeTitlesView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeTitlesView.ProtoReflect.Descriptor instead.
func (*FreeTitlesView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{16}
}

func (x *FreeTitlesView) GetTitles() []*FreeTitlesView_Item {
	if x != nil {
		return x.Titles
	}
	return nil
}

// -> /api/title_list/all_v2
type AllView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titles []*Category `protobuf:"bytes,1,rep,name=titles,proto3" json:"titles,omitempty"`
}

func (x *AllView) Reset() {
	*x = AllView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllView) ProtoMessage() {}

func (x *AllView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllView.ProtoReflect.Descriptor instead.
func (*AllView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{17}
}

func (x *AllView) GetTitles() []*Category {
	if x != nil {
		return x.Titles
	}
	return nil
}

// -> /api/settings_v2
type SettingsView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon     *Sns     `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Username string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Counts   []*Count `protobuf:"bytes,5,rep,name=counts,proto3" json:"counts,omitempty"`
}

func (x *SettingsView) Reset() {
	*x = SettingsView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingsView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsView) ProtoMessage() {}

func (x *SettingsView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsView.ProtoReflect.Descriptor instead.
func (*SettingsView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{18}
}

func (x *SettingsView) GetIcon() *Sns {
	if x != nil {
		return x.Icon
	}
	return nil
}

func (x *SettingsView) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SettingsView) GetCounts() []*Count {
	if x != nil {
		return x.Counts
	}
	return nil
}

// -> /api/init_v2
type InitView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default Lang     `protobuf:"varint,1,opt,name=default,proto3,enum=mangaplus_resp_app.Lang" json:"default,omitempty"`
	Counts  []*Count `protobuf:"bytes,2,rep,name=counts,proto3" json:"counts,omitempty"`
}

func (x *InitView) Reset() {
	*x = InitView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitView) ProtoMessage() {}

func (x *InitView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitView.ProtoReflect.Descriptor instead.
func (*InitView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{19}
}

func (x *InitView) GetDefault() Lang {
	if x != nil {
		return x.Default
	}
	return Lang_LANG_ENGLISH
}

func (x *InitView) GetCounts() []*Count {
	if x != nil {
		return x.Counts
	}
	return nil
}

// -> /api/register
type RegisterView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *RegisterView) Reset() {
	*x = RegisterView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterView) ProtoMessage() {}

func (x *RegisterView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterView.ProtoReflect.Descriptor instead.
func (*RegisterView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{20}
}

func (x *RegisterView) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// -> /api/home_v3
type HomeView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Banners []*Banner          `protobuf:"bytes,1,rep,name=banners,proto3" json:"banners,omitempty"`
	Updates []*HomeView_Update `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty"`
	Popup   *HomeView_Popup    `protobuf:"bytes,9,opt,name=popup,proto3" json:"popup,omitempty"`
}

func (x *HomeView) Reset() {
	*x = HomeView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeView) ProtoMessage() {}

func (x *HomeView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeView.ProtoReflect.Descriptor instead.
func (*HomeView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{21}
}

func (x *HomeView) GetBanners() []*Banner {
	if x != nil {
		return x.Banners
	}
	return nil
}

func (x *HomeView) GetUpdates() []*HomeView_Update {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *HomeView) GetPopup() *HomeView_Popup {
	if x != nil {
		return x.Popup
	}
	return nil
}

// -> /api/featured
type FeaturedView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopBanner *Banner                  `protobuf:"bytes,1,opt,name=topBanner,proto3" json:"topBanner,omitempty"`
	TopLeft   *Banner                  `protobuf:"bytes,2,opt,name=topLeft,proto3" json:"topLeft,omitempty"`
	TopRight  *Banner                  `protobuf:"bytes,3,opt,name=topRight,proto3" json:"topRight,omitempty"`
	Featured  []*FeaturedView_Featured `protobuf:"bytes,4,rep,name=featured,proto3" json:"featured,omitempty"`
}

func (x *FeaturedView) Reset() {
	*x = FeaturedView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeaturedView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeaturedView) ProtoMessage() {}

func (x *FeaturedView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeaturedView.ProtoReflect.Descriptor instead.
func (*FeaturedView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{22}
}

func (x *FeaturedView) GetTopBanner() *Banner {
	if x != nil {
		return x.TopBanner
	}
	return nil
}

func (x *FeaturedView) GetTopLeft() *Banner {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *FeaturedView) GetTopRight() *Banner {
	if x != nil {
		return x.TopRight
	}
	return nil
}

func (x *FeaturedView) GetFeatured() []*FeaturedView_Featured {
	if x != nil {
		return x.Featured
	}
	return nil
}

// -> /api/title_detailV2
type TitleDetailView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                    *Title                       `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	ImageTitle               string                       `protobuf:"bytes,2,opt,name=imageTitle,proto3" json:"imageTitle,omitempty"`
	Overview                 string                       `protobuf:"bytes,3,opt,name=overview,proto3" json:"overview,omitempty"`
	ImageBackground          string                       `protobuf:"bytes,4,opt,name=imageBackground,proto3" json:"imageBackground,omitempty"`
	NextTimeStamp            uint32                       `protobuf:"varint,5,opt,name=nextTimeStamp,proto3" json:"nextTimeStamp,omitempty"`
	UpdateTiming             TitleDetailView_UpdateTiming `protobuf:"varint,6,opt,name=updateTiming,proto3,enum=mangaplus_resp_app.TitleDetailView_UpdateTiming" json:"updateTiming,omitempty"`
	ViewingPeriodDescription string                       `protobuf:"bytes,7,opt,name=viewingPeriodDescription,proto3" json:"viewingPeriodDescription,omitempty"`
	NonAppearanceInfo        string                       `protobuf:"bytes,8,opt,name=nonAppearanceInfo,proto3" json:"nonAppearanceInfo,omitempty"`
	// repeated Chapter firstChapterList = 9;
	// repeated Chapter lastChapterList = 10;
	Banners              []*Banner              `protobuf:"bytes,11,rep,name=banners,proto3" json:"banners,omitempty"`
	RecommendedTitleList []*Title               `protobuf:"bytes,12,rep,name=recommendedTitleList,proto3" json:"recommendedTitleList,omitempty"`
	Sns                  *Sns                   `protobuf:"bytes,13,opt,name=sns,proto3" json:"sns,omitempty"`
	IsSimulcastReleased  bool                   `protobuf:"varint,14,opt,name=isSimulcastReleased,proto3" json:"isSimulcastReleased,omitempty"`
	IsSubscribed         bool                   `protobuf:"varint,15,opt,name=isSubscribed,proto3" json:"isSubscribed,omitempty"`
	Rating               TitleDetailView_Rating `protobuf:"varint,16,opt,name=rating,proto3,enum=mangaplus_resp_app.TitleDetailView_Rating" json:"rating,omitempty"`
	ChaptersDescending   bool                   `protobuf:"varint,17,opt,name=chaptersDescending,proto3" json:"chaptersDescending,omitempty"`
	NumberOfViews        uint32                 `protobuf:"varint,18,opt,name=numberOfViews,proto3" json:"numberOfViews,omitempty"`
	// publisherItems = 19;
	TitleBanners *Banner                        `protobuf:"bytes,20,opt,name=titleBanners,proto3" json:"titleBanners,omitempty"`
	AllLanguage  []*TitleDetailView_AllLanguage `protobuf:"bytes,27,rep,name=allLanguage,proto3" json:"allLanguage,omitempty"`
	Chapters     []*TitleDetailView_Chapters    `protobuf:"bytes,28,rep,name=chapters,proto3" json:"chapters,omitempty"`
	Country      string                         `protobuf:"bytes,30,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *TitleDetailView) Reset() {
	*x = TitleDetailView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleDetailView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleDetailView) ProtoMessage() {}

func (x *TitleDetailView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleDetailView.ProtoReflect.Descriptor instead.
func (*TitleDetailView) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{23}
}

func (x *TitleDetailView) GetTitle() *Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *TitleDetailView) GetImageTitle() string {
	if x != nil {
		return x.ImageTitle
	}
	return ""
}

func (x *TitleDetailView) GetOverview() string {
	if x != nil {
		return x.Overview
	}
	return ""
}

func (x *TitleDetailView) GetImageBackground() string {
	if x != nil {
		return x.ImageBackground
	}
	return ""
}

func (x *TitleDetailView) GetNextTimeStamp() uint32 {
	if x != nil {
		return x.NextTimeStamp
	}
	return 0
}

func (x *TitleDetailView) GetUpdateTiming() TitleDetailView_UpdateTiming {
	if x != nil {
		return x.UpdateTiming
	}
	return TitleDetailView_NOT_REGULARLY
}

func (x *TitleDetailView) GetViewingPeriodDescription() string {
	if x != nil {
		return x.ViewingPeriodDescription
	}
	return ""
}

func (x *TitleDetailView) GetNonAppearanceInfo() string {
	if x != nil {
		return x.NonAppearanceInfo
	}
	return ""
}

func (x *TitleDetailView) GetBanners() []*Banner {
	if x != nil {
		return x.Banners
	}
	return nil
}

func (x *TitleDetailView) GetRecommendedTitleList() []*Title {
	if x != nil {
		return x.RecommendedTitleList
	}
	return nil
}

func (x *TitleDetailView) GetSns() *Sns {
	if x != nil {
		return x.Sns
	}
	return nil
}

func (x *TitleDetailView) GetIsSimulcastReleased() bool {
	if x != nil {
		return x.IsSimulcastReleased
	}
	return false
}

func (x *TitleDetailView) GetIsSubscribed() bool {
	if x != nil {
		return x.IsSubscribed
	}
	return false
}

func (x *TitleDetailView) GetRating() TitleDetailView_Rating {
	if x != nil {
		return x.Rating
	}
	return TitleDetailView_ALLAGE
}

func (x *TitleDetailView) GetChaptersDescending() bool {
	if x != nil {
		return x.ChaptersDescending
	}
	return false
}

func (x *TitleDetailView) GetNumberOfViews() uint32 {
	if x != nil {
		return x.NumberOfViews
	}
	return 0
}

func (x *TitleDetailView) GetTitleBanners() *Banner {
	if x != nil {
		return x.TitleBanners
	}
	return nil
}

func (x *TitleDetailView) GetAllLanguage() []*TitleDetailView_AllLanguage {
	if x != nil {
		return x.AllLanguage
	}
	return nil
}

func (x *TitleDetailView) GetChapters() []*TitleDetailView_Chapters {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *TitleDetailView) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type ErrorResult_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string                   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Button   *ErrorResult_Item_Button `protobuf:"bytes,5,opt,name=button,proto3" json:"button,omitempty"`
	Language Lang                     `protobuf:"varint,6,opt,name=language,proto3,enum=mangaplus_resp_app.Lang" json:"language,omitempty"`
}

func (x *ErrorResult_Item) Reset() {
	*x = ErrorResult_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResult_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResult_Item) ProtoMessage() {}

func (x *ErrorResult_Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResult_Item.ProtoReflect.Descriptor instead.
func (*ErrorResult_Item) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ErrorResult_Item) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorResult_Item) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResult_Item) GetButton() *ErrorResult_Item_Button {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *ErrorResult_Item) GetLanguage() Lang {
	if x != nil {
		return x.Language
	}
	return Lang_LANG_ENGLISH
}

type ErrorResult_Item_Button struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *ErrorResult_Item_Button) Reset() {
	*x = ErrorResult_Item_Button{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResult_Item_Button) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResult_Item_Button) ProtoMessage() {}

func (x *ErrorResult_Item_Button) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResult_Item_Button.ProtoReflect.Descriptor instead.
func (*ErrorResult_Item_Button) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *ErrorResult_Item_Button) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type MangaViewer_Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *MangaViewer_Page_MangaPage `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *MangaViewer_Page) Reset() {
	*x = MangaViewer_Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MangaViewer_Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaViewer_Page) ProtoMessage() {}

func (x *MangaViewer_Page) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaViewer_Page.ProtoReflect.Descriptor instead.
func (*MangaViewer_Page) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{13, 0}
}

func (x *MangaViewer_Page) GetPage() *MangaViewer_Page_MangaPage {
	if x != nil {
		return x.Page
	}
	return nil
}

type MangaViewer_Page_MangaPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImagePage     string                          `protobuf:"bytes,1,opt,name=imagePage,proto3" json:"imagePage,omitempty"`
	Width         uint32                          `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32                          `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Type          MangaViewer_Page_MangaPage_Type `protobuf:"varint,4,opt,name=type,proto3,enum=mangaplus_resp_app.MangaViewer_Page_MangaPage_Type" json:"type,omitempty"`
	EncryptionKey string                          `protobuf:"bytes,5,opt,name=encryptionKey,proto3" json:"encryptionKey,omitempty"`
}

func (x *MangaViewer_Page_MangaPage) Reset() {
	*x = MangaViewer_Page_MangaPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MangaViewer_Page_MangaPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaViewer_Page_MangaPage) ProtoMessage() {}

func (x *MangaViewer_Page_MangaPage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaViewer_Page_MangaPage.ProtoReflect.Descriptor instead.
func (*MangaViewer_Page_MangaPage) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{13, 0, 0}
}

func (x *MangaViewer_Page_MangaPage) GetImagePage() string {
	if x != nil {
		return x.ImagePage
	}
	return ""
}

func (x *MangaViewer_Page_MangaPage) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MangaViewer_Page_MangaPage) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MangaViewer_Page_MangaPage) GetType() MangaViewer_Page_MangaPage_Type {
	if x != nil {
		return x.Type
	}
	return MangaViewer_Page_MangaPage_SINGLE
}

func (x *MangaViewer_Page_MangaPage) GetEncryptionKey() string {
	if x != nil {
		return x.EncryptionKey
	}
	return ""
}

type ProfileView_Icon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ProfileView_Icon) Reset() {
	*x = ProfileView_Icon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileView_Icon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileView_Icon) ProtoMessage() {}

func (x *ProfileView_Icon) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileView_Icon.ProtoReflect.Descriptor instead.
func (*ProfileView_Icon) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ProfileView_Icon) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProfileView_Icon) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type FreeTitlesView_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      *Title `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	LastUpdate string `protobuf:"bytes,2,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
}

func (x *FreeTitlesView_Item) Reset() {
	*x = FreeTitlesView_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeTitlesView_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeTitlesView_Item) ProtoMessage() {}

func (x *FreeTitlesView_Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeTitlesView_Item.ProtoReflect.Descriptor instead.
func (*FreeTitlesView_Item) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{16, 0}
}

func (x *FreeTitlesView_Item) GetTitle() *Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *FreeTitlesView_Item) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

type HomeView_Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category string                  `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Items    []*HomeView_Update_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *HomeView_Update) Reset() {
	*x = HomeView_Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeView_Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeView_Update) ProtoMessage() {}

func (x *HomeView_Update) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeView_Update.ProtoReflect.Descriptor instead.
func (*HomeView_Update) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{21, 0}
}

func (x *HomeView_Update) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *HomeView_Update) GetItems() []*HomeView_Update_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type HomeView_Popup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource  *HomeView_Popup_Resource `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	ViewCount int32                    `protobuf:"varint,5,opt,name=viewCount,proto3" json:"viewCount,omitempty"`
}

func (x *HomeView_Popup) Reset() {
	*x = HomeView_Popup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeView_Popup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeView_Popup) ProtoMessage() {}

func (x *HomeView_Popup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeView_Popup.ProtoReflect.Descriptor instead.
func (*HomeView_Popup) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{21, 1}
}

func (x *HomeView_Popup) GetResource() *HomeView_Popup_Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *HomeView_Popup) GetViewCount() int32 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

type HomeView_Update_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleName   string                         `protobuf:"bytes,1,opt,name=titleName,proto3" json:"titleName,omitempty"`
	ChapterName string                         `protobuf:"bytes,2,opt,name=chapterName,proto3" json:"chapterName,omitempty"`
	Metadata    *HomeView_Update_Item_Metadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *HomeView_Update_Item) Reset() {
	*x = HomeView_Update_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeView_Update_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeView_Update_Item) ProtoMessage() {}

func (x *HomeView_Update_Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeView_Update_Item.ProtoReflect.Descriptor instead.
func (*HomeView_Update_Item) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{21, 0, 0}
}

func (x *HomeView_Update_Item) GetTitleName() string {
	if x != nil {
		return x.TitleName
	}
	return ""
}

func (x *HomeView_Update_Item) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *HomeView_Update_Item) GetMetadata() *HomeView_Update_Item_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type HomeView_Update_Item_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           []*Title `protobuf:"bytes,1,rep,name=title,proto3" json:"title,omitempty"`
	ChapterId       int32    `protobuf:"varint,2,opt,name=chapterId,proto3" json:"chapterId,omitempty"`
	ChapterName     string   `protobuf:"bytes,3,opt,name=chapterName,proto3" json:"chapterName,omitempty"`
	ChapterSubTitle string   `protobuf:"bytes,4,opt,name=chapterSubTitle,proto3" json:"chapterSubTitle,omitempty"`
	Language        Lang     `protobuf:"varint,5,opt,name=language,proto3,enum=mangaplus_resp_app.Lang" json:"language,omitempty"`
}

func (x *HomeView_Update_Item_Metadata) Reset() {
	*x = HomeView_Update_Item_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeView_Update_Item_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeView_Update_Item_Metadata) ProtoMessage() {}

func (x *HomeView_Update_Item_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeView_Update_Item_Metadata.ProtoReflect.Descriptor instead.
func (*HomeView_Update_Item_Metadata) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{21, 0, 0, 0}
}

func (x *HomeView_Update_Item_Metadata) GetTitle() []*Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *HomeView_Update_Item_Metadata) GetChapterId() int32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *HomeView_Update_Item_Metadata) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *HomeView_Update_Item_Metadata) GetChapterSubTitle() string {
	if x != nil {
		return x.ChapterSubTitle
	}
	return ""
}

func (x *HomeView_Update_Item_Metadata) GetLanguage() Lang {
	if x != nil {
		return x.Language
	}
	return Lang_LANG_ENGLISH
}

type HomeView_Popup_Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sns        *Sns   `protobuf:"bytes,1,opt,name=sns,proto3" json:"sns,omitempty"`
	ImagePopup string `protobuf:"bytes,2,opt,name=imagePopup,proto3" json:"imagePopup,omitempty"`
}

func (x *HomeView_Popup_Resource) Reset() {
	*x = HomeView_Popup_Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeView_Popup_Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeView_Popup_Resource) ProtoMessage() {}

func (x *HomeView_Popup_Resource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeView_Popup_Resource.ProtoReflect.Descriptor instead.
func (*HomeView_Popup_Resource) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{21, 1, 0}
}

func (x *HomeView_Popup_Resource) GetSns() *Sns {
	if x != nil {
		return x.Sns
	}
	return nil
}

func (x *HomeView_Popup_Resource) GetImagePopup() string {
	if x != nil {
		return x.ImagePopup
	}
	return ""
}

type FeaturedView_Featured struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Banner   *Banner   `protobuf:"bytes,1,opt,name=banner,proto3" json:"banner,omitempty"`
	Category *Category `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *FeaturedView_Featured) Reset() {
	*x = FeaturedView_Featured{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeaturedView_Featured) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeaturedView_Featured) ProtoMessage() {}

func (x *FeaturedView_Featured) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeaturedView_Featured.ProtoReflect.Descriptor instead.
func (*FeaturedView_Featured) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{22, 0}
}

func (x *FeaturedView_Featured) GetBanner() *Banner {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *FeaturedView_Featured) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

type TitleDetailView_AllLanguage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId  uint32 `protobuf:"varint,1,opt,name=titleId,proto3" json:"titleId,omitempty"`
	Language Lang   `protobuf:"varint,2,opt,name=language,proto3,enum=mangaplus_resp_app.Lang" json:"language,omitempty"`
}

func (x *TitleDetailView_AllLanguage) Reset() {
	*x = TitleDetailView_AllLanguage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleDetailView_AllLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleDetailView_AllLanguage) ProtoMessage() {}

func (x *TitleDetailView_AllLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleDetailView_AllLanguage.ProtoReflect.Descriptor instead.
func (*TitleDetailView_AllLanguage) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{23, 0}
}

func (x *TitleDetailView_AllLanguage) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *TitleDetailView_AllLanguage) GetLanguage() Lang {
	if x != nil {
		return x.Language
	}
	return Lang_LANG_ENGLISH
}

type TitleDetailView_Chapters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count            uint32     `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	FirstChapterList []*Chapter `protobuf:"bytes,2,rep,name=firstChapterList,proto3" json:"firstChapterList,omitempty"`
	ChapterList      []*Chapter `protobuf:"bytes,3,rep,name=chapterList,proto3" json:"chapterList,omitempty"`
	LastChapterList  []*Chapter `protobuf:"bytes,4,rep,name=lastChapterList,proto3" json:"lastChapterList,omitempty"`
}

func (x *TitleDetailView_Chapters) Reset() {
	*x = TitleDetailView_Chapters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mangaplus_resp_app_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleDetailView_Chapters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleDetailView_Chapters) ProtoMessage() {}

func (x *TitleDetailView_Chapters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mangaplus_resp_app_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleDetailView_Chapters.ProtoReflect.Descriptor instead.
func (*TitleDetailView_Chapters) Descriptor() ([]byte, []int) {
	return file_proto_mangaplus_resp_app_proto_rawDescGZIP(), []int{23, 1}
}

func (x *TitleDetailView_Chapters) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TitleDetailView_Chapters) GetFirstChapterList() []*Chapter {
	if x != nil {
		return x.FirstChapterList
	}
	return nil
}

func (x *TitleDetailView_Chapters) GetChapterList() []*Chapter {
	if x != nil {
		return x.ChapterList
	}
	return nil
}

func (x *TitleDetailView_Chapters) GetLastChapterList() []*Chapter {
	if x != nil {
		return x.LastChapterList
	}
	return nil
}

var File_proto_mangaplus_resp_app_proto protoreflect.FileDescriptor

var file_proto_mangaplus_resp_app_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x5f, 0x61, 0x70, 0x70, 0x22, 0x2b, 0x0a, 0x03, 0x53, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0x73, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x03, 0x73, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e,
	0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x53, 0x6e, 0x73, 0x52, 0x03, 0x73, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x34, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0xc7, 0x02,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a,
	0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x69, 0x73, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x6e, 0x6c,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x56, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xf9, 0x01, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x4c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x22, 0x4f, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x7e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d,
	0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0xa9, 0x03, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x12, 0x46, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x67,
	0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0b, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x1a, 0xd1, 0x01, 0x0a,
	0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e,
	0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x4c, 0x61, 0x6e, 0x67, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x1a, 0x20,
	0x0a, 0x06, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xd7, 0x08, 0x0a, 0x0d, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69,
	0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x44, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c,
	0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x44, 0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d,
	0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0c,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x12, 0x41, 0x0a, 0x0b,
	0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x5c, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x4d, 0x0a,
	0x0f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c,
	0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x12, 0x41, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x41, 0x0a, 0x0b, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x56,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x12, 0x41, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70,
	0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x53, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x38, 0x0a, 0x08, 0x68, 0x6f,
	0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d,
	0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x6c, 0x6c, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x12, 0x44, 0x0a, 0x0c, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x56, 0x69, 0x65, 0x77, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x56, 0x69, 0x65,
	0x77, 0x12, 0x38, 0x0a, 0x08, 0x69, 0x6e, 0x69, 0x74, 0x56, 0x69, 0x65, 0x77, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x08, 0x69, 0x6e, 0x69, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x41, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x4a,
	0x0a, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c,
	0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x46, 0x72, 0x65, 0x65,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x22, 0xa8, 0x01, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x32, 0x0a, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x32,
	0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x49, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x31, 0x0a,
	0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73,
	0x22, 0x40, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x31, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x5f, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x73, 0x22, 0x40, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65,
	0x77, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x73, 0x22, 0x86, 0x06, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x03, 0x73, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x6e, 0x73, 0x52, 0x03, 0x73,
	0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x69, 0x73, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x1a, 0xc8, 0x02, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x61, 0x6e, 0x67,
	0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4d,
	0x61, 0x6e, 0x67, 0x61, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x61, 0x6e, 0x67, 0x61, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x1a,
	0xfb, 0x01, 0x0a, 0x09, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x47, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70,
	0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4d, 0x61, 0x6e,
	0x67, 0x61, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61,
	0x6e, 0x67, 0x61, 0x50, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x33, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x4c, 0x45, 0x46, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x22, 0xb3, 0x01,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x3a, 0x0a,
	0x05, 0x69, 0x63, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d,
	0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x49, 0x63,
	0x6f, 0x6e, 0x52, 0x05, 0x69, 0x63, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x6e,
	0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x49, 0x63, 0x6f, 0x6e,
	0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x1a, 0x28, 0x0a, 0x04, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x2b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x3f, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x73, 0x1a, 0x57, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61,
	0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x3f, 0x0a,
	0x07, 0x41, 0x6c, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x12, 0x34, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61,
	0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0x8a,
	0x01, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x2b, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x53, 0x6e, 0x73, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61,
	0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x71, 0x0a, 0x08, 0x49,
	0x6e, 0x69, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x32, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61,
	0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4c, 0x61,
	0x6e, 0x67, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61,
	0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x26,
	0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xde, 0x06, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x34, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x6e,
	0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x48, 0x6f, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x6f, 0x70, 0x75,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70,
	0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x48, 0x6f, 0x6d,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x05, 0x70, 0x6f, 0x70,
	0x75, 0x70, 0x1a, 0xda, 0x03, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61,
	0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xf3, 0x02, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0xdb, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61,
	0x70, 0x70, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x1a,
	0xc5, 0x01, 0x0a, 0x05, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x47, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x61,
	0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x55, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x03,
	0x73, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x67,
	0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x53,
	0x6e, 0x73, 0x52, 0x03, 0x73, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x6f, 0x70, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x22, 0xf7, 0x02, 0x0a, 0x0c, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61,
	0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70,
	0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e,
	0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x45, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x56, 0x69, 0x65, 0x77, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x52, 0x08, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x1a, 0x78, 0x0a, 0x08, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x67,
	0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0xb9, 0x0c, 0x0a, 0x0f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x54, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61,
	0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x18, 0x76, 0x69, 0x65, 0x77,
	0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x76, 0x69, 0x65, 0x77,
	0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x61,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6e, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x34, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x4d, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c,
	0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x52, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x73, 0x6e, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x6e, 0x73, 0x52, 0x03, 0x73,
	0x6e, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x69, 0x73, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x63, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x69, 0x73, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61,
	0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x12,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x73, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x56, 0x69, 0x65, 0x77, 0x73, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x56, 0x69, 0x65,
	0x77, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61,
	0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x73, 0x12, 0x51, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70,
	0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x41, 0x6c, 0x6c,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70,
	0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x73, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x5d, 0x0a, 0x0b, 0x41, 0x6c, 0x6c,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x1a, 0xef, 0x01, 0x0a, 0x08, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x52, 0x10, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x67,
	0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x2e, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x61, 0x70,
	0x70, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x11, 0x0a, 0x0d, 0x4e,
	0x4f, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x52, 0x4c, 0x59, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x4f, 0x4e, 0x44, 0x41, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x55,
	0x45, 0x53, 0x44, 0x41, 0x59, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x45, 0x44, 0x4e, 0x45,
	0x53, 0x44, 0x41, 0x59, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x55, 0x52, 0x53, 0x44,
	0x41, 0x59, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x49, 0x44, 0x41, 0x59, 0x10, 0x05,
	0x12, 0x0c, 0x0a, 0x08, 0x53, 0x41, 0x54, 0x55, 0x52, 0x44, 0x41, 0x59, 0x10, 0x06, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x55, 0x4e, 0x44, 0x41, 0x59, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x41,
	0x59, 0x10, 0x08, 0x22, 0x38, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x4c, 0x4c, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x45,
	0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x45, 0x4e, 0x50, 0x4c, 0x55, 0x53, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x03, 0x2a, 0xac, 0x01,
	0x0a, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x41, 0x4e, 0x47, 0x5f, 0x45,
	0x4e, 0x47, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x41, 0x4e, 0x47,
	0x5f, 0x53, 0x50, 0x41, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41,
	0x4e, 0x47, 0x5f, 0x46, 0x52, 0x45, 0x4e, 0x43, 0x48, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4c,
	0x41, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x44, 0x4f, 0x4e, 0x45, 0x53, 0x49, 0x41, 0x4e, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x41, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x55, 0x47, 0x55,
	0x45, 0x53, 0x45, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x41, 0x4e, 0x47, 0x5f, 0x52, 0x55,
	0x53, 0x53, 0x49, 0x41, 0x4e, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x41, 0x4e, 0x47, 0x5f,
	0x54, 0x48, 0x41, 0x49, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x4e, 0x47, 0x5f, 0x47,
	0x45, 0x52, 0x4d, 0x41, 0x4e, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x41, 0x4e, 0x47, 0x5f,
	0x56, 0x49, 0x45, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x45, 0x10, 0x09, 0x42, 0x27, 0x5a, 0x25,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c,
	0x75, 0x73, 0x2f, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x5f, 0x61, 0x70, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_mangaplus_resp_app_proto_rawDescOnce sync.Once
	file_proto_mangaplus_resp_app_proto_rawDescData = file_proto_mangaplus_resp_app_proto_rawDesc
)

func file_proto_mangaplus_resp_app_proto_rawDescGZIP() []byte {
	file_proto_mangaplus_resp_app_proto_rawDescOnce.Do(func() {
		file_proto_mangaplus_resp_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_mangaplus_resp_app_proto_rawDescData)
	})
	return file_proto_mangaplus_resp_app_proto_rawDescData
}

var file_proto_mangaplus_resp_app_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_mangaplus_resp_app_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_proto_mangaplus_resp_app_proto_goTypes = []interface{}{
	(Lang)(0),                             // 0: mangaplus_resp_app.Lang
	(MangaViewer_Page_MangaPage_Type)(0),  // 1: mangaplus_resp_app.MangaViewer.Page.MangaPage.Type
	(TitleDetailView_UpdateTiming)(0),     // 2: mangaplus_resp_app.TitleDetailView.UpdateTiming
	(TitleDetailView_Rating)(0),           // 3: mangaplus_resp_app.TitleDetailView.Rating
	(*Sns)(nil),                           // 4: mangaplus_resp_app.Sns
	(*Banner)(nil),                        // 5: mangaplus_resp_app.Banner
	(*Count)(nil),                         // 6: mangaplus_resp_app.Count
	(*Chapter)(nil),                       // 7: mangaplus_resp_app.Chapter
	(*Title)(nil),                         // 8: mangaplus_resp_app.Title
	(*Category)(nil),                      // 9: mangaplus_resp_app.Category
	(*Response)(nil),                      // 10: mangaplus_resp_app.Response
	(*ErrorResult)(nil),                   // 11: mangaplus_resp_app.ErrorResult
	(*SuccessResult)(nil),                 // 12: mangaplus_resp_app.SuccessResult
	(*ContentView)(nil),                   // 13: mangaplus_resp_app.ContentView
	(*SubscribedTitlesView)(nil),          // 14: mangaplus_resp_app.SubscribedTitlesView
	(*RankingView)(nil),                   // 15: mangaplus_resp_app.RankingView
	(*CommentView)(nil),                   // 16: mangaplus_resp_app.CommentView
	(*MangaViewer)(nil),                   // 17: mangaplus_resp_app.MangaViewer
	(*ProfileView)(nil),                   // 18: mangaplus_resp_app.ProfileView
	(*UpdateProfileView)(nil),             // 19: mangaplus_resp_app.UpdateProfileView
	(*FreeTitlesView)(nil),                // 20: mangaplus_resp_app.FreeTitlesView
	(*AllView)(nil),                       // 21: mangaplus_resp_app.AllView
	(*SettingsView)(nil),                  // 22: mangaplus_resp_app.SettingsView
	(*InitView)(nil),                      // 23: mangaplus_resp_app.InitView
	(*RegisterView)(nil),                  // 24: mangaplus_resp_app.RegisterView
	(*HomeView)(nil),                      // 25: mangaplus_resp_app.HomeView
	(*FeaturedView)(nil),                  // 26: mangaplus_resp_app.FeaturedView
	(*TitleDetailView)(nil),               // 27: mangaplus_resp_app.TitleDetailView
	(*ErrorResult_Item)(nil),              // 28: mangaplus_resp_app.ErrorResult.Item
	(*ErrorResult_Item_Button)(nil),       // 29: mangaplus_resp_app.ErrorResult.Item.Button
	(*MangaViewer_Page)(nil),              // 30: mangaplus_resp_app.MangaViewer.Page
	(*MangaViewer_Page_MangaPage)(nil),    // 31: mangaplus_resp_app.MangaViewer.Page.MangaPage
	(*ProfileView_Icon)(nil),              // 32: mangaplus_resp_app.ProfileView.Icon
	(*FreeTitlesView_Item)(nil),           // 33: mangaplus_resp_app.FreeTitlesView.Item
	(*HomeView_Update)(nil),               // 34: mangaplus_resp_app.HomeView.Update
	(*HomeView_Popup)(nil),                // 35: mangaplus_resp_app.HomeView.Popup
	(*HomeView_Update_Item)(nil),          // 36: mangaplus_resp_app.HomeView.Update.Item
	(*HomeView_Update_Item_Metadata)(nil), // 37: mangaplus_resp_app.HomeView.Update.Item.Metadata
	(*HomeView_Popup_Resource)(nil),       // 38: mangaplus_resp_app.HomeView.Popup.Resource
	(*FeaturedView_Featured)(nil),         // 39: mangaplus_resp_app.FeaturedView.Featured
	(*TitleDetailView_AllLanguage)(nil),   // 40: mangaplus_resp_app.TitleDetailView.AllLanguage
	(*TitleDetailView_Chapters)(nil),      // 41: mangaplus_resp_app.TitleDetailView.Chapters
}
var file_proto_mangaplus_resp_app_proto_depIdxs = []int32{
	4,  // 0: mangaplus_resp_app.Banner.sns:type_name -> mangaplus_resp_app.Sns
	0,  // 1: mangaplus_resp_app.Count.language:type_name -> mangaplus_resp_app.Lang
	0,  // 2: mangaplus_resp_app.Title.language:type_name -> mangaplus_resp_app.Lang
	8,  // 3: mangaplus_resp_app.Category.items:type_name -> mangaplus_resp_app.Title
	12, // 4: mangaplus_resp_app.Response.success:type_name -> mangaplus_resp_app.SuccessResult
	11, // 5: mangaplus_resp_app.Response.error:type_name -> mangaplus_resp_app.ErrorResult
	28, // 6: mangaplus_resp_app.ErrorResult.default:type_name -> mangaplus_resp_app.ErrorResult.Item
	28, // 7: mangaplus_resp_app.ErrorResult.display:type_name -> mangaplus_resp_app.ErrorResult.Item
	28, // 8: mangaplus_resp_app.ErrorResult.allLanguage:type_name -> mangaplus_resp_app.ErrorResult.Item
	24, // 9: mangaplus_resp_app.SuccessResult.registerView:type_name -> mangaplus_resp_app.RegisterView
	26, // 10: mangaplus_resp_app.SuccessResult.featuredView:type_name -> mangaplus_resp_app.FeaturedView
	15, // 11: mangaplus_resp_app.SuccessResult.rankingView:type_name -> mangaplus_resp_app.RankingView
	14, // 12: mangaplus_resp_app.SuccessResult.subscribedTitlesView:type_name -> mangaplus_resp_app.SubscribedTitlesView
	27, // 13: mangaplus_resp_app.SuccessResult.titleDetailView:type_name -> mangaplus_resp_app.TitleDetailView
	16, // 14: mangaplus_resp_app.SuccessResult.commentView:type_name -> mangaplus_resp_app.CommentView
	17, // 15: mangaplus_resp_app.SuccessResult.mangaViewer:type_name -> mangaplus_resp_app.MangaViewer
	18, // 16: mangaplus_resp_app.SuccessResult.profileView:type_name -> mangaplus_resp_app.ProfileView
	19, // 17: mangaplus_resp_app.SuccessResult.updateProfileView:type_name -> mangaplus_resp_app.UpdateProfileView
	25, // 18: mangaplus_resp_app.SuccessResult.homeView:type_name -> mangaplus_resp_app.HomeView
	21, // 19: mangaplus_resp_app.SuccessResult.allView:type_name -> mangaplus_resp_app.AllView
	22, // 20: mangaplus_resp_app.SuccessResult.settingsView:type_name -> mangaplus_resp_app.SettingsView
	23, // 21: mangaplus_resp_app.SuccessResult.initView:type_name -> mangaplus_resp_app.InitView
	13, // 22: mangaplus_resp_app.SuccessResult.contentView:type_name -> mangaplus_resp_app.ContentView
	20, // 23: mangaplus_resp_app.SuccessResult.freeTitlesView:type_name -> mangaplus_resp_app.FreeTitlesView
	0,  // 24: mangaplus_resp_app.ContentView.default:type_name -> mangaplus_resp_app.Lang
	0,  // 25: mangaplus_resp_app.ContentView.display:type_name -> mangaplus_resp_app.Lang
	6,  // 26: mangaplus_resp_app.ContentView.counts:type_name -> mangaplus_resp_app.Count
	8,  // 27: mangaplus_resp_app.SubscribedTitlesView.titles:type_name -> mangaplus_resp_app.Title
	8,  // 28: mangaplus_resp_app.RankingView.titles:type_name -> mangaplus_resp_app.Title
	8,  // 29: mangaplus_resp_app.CommentView.titles:type_name -> mangaplus_resp_app.Title
	30, // 30: mangaplus_resp_app.MangaViewer.pages:type_name -> mangaplus_resp_app.MangaViewer.Page
	7,  // 31: mangaplus_resp_app.MangaViewer.chapters:type_name -> mangaplus_resp_app.Chapter
	4,  // 32: mangaplus_resp_app.MangaViewer.sns:type_name -> mangaplus_resp_app.Sns
	32, // 33: mangaplus_resp_app.ProfileView.icons:type_name -> mangaplus_resp_app.ProfileView.Icon
	32, // 34: mangaplus_resp_app.ProfileView.default:type_name -> mangaplus_resp_app.ProfileView.Icon
	33, // 35: mangaplus_resp_app.FreeTitlesView.titles:type_name -> mangaplus_resp_app.FreeTitlesView.Item
	9,  // 36: mangaplus_resp_app.AllView.titles:type_name -> mangaplus_resp_app.Category
	4,  // 37: mangaplus_resp_app.SettingsView.icon:type_name -> mangaplus_resp_app.Sns
	6,  // 38: mangaplus_resp_app.SettingsView.counts:type_name -> mangaplus_resp_app.Count
	0,  // 39: mangaplus_resp_app.InitView.default:type_name -> mangaplus_resp_app.Lang
	6,  // 40: mangaplus_resp_app.InitView.counts:type_name -> mangaplus_resp_app.Count
	5,  // 41: mangaplus_resp_app.HomeView.banners:type_name -> mangaplus_resp_app.Banner
	34, // 42: mangaplus_resp_app.HomeView.updates:type_name -> mangaplus_resp_app.HomeView.Update
	35, // 43: mangaplus_resp_app.HomeView.popup:type_name -> mangaplus_resp_app.HomeView.Popup
	5,  // 44: mangaplus_resp_app.FeaturedView.topBanner:type_name -> mangaplus_resp_app.Banner
	5,  // 45: mangaplus_resp_app.FeaturedView.topLeft:type_name -> mangaplus_resp_app.Banner
	5,  // 46: mangaplus_resp_app.FeaturedView.topRight:type_name -> mangaplus_resp_app.Banner
	39, // 47: mangaplus_resp_app.FeaturedView.featured:type_name -> mangaplus_resp_app.FeaturedView.Featured
	8,  // 48: mangaplus_resp_app.TitleDetailView.title:type_name -> mangaplus_resp_app.Title
	2,  // 49: mangaplus_resp_app.TitleDetailView.updateTiming:type_name -> mangaplus_resp_app.TitleDetailView.UpdateTiming
	5,  // 50: mangaplus_resp_app.TitleDetailView.banners:type_name -> mangaplus_resp_app.Banner
	8,  // 51: mangaplus_resp_app.TitleDetailView.recommendedTitleList:type_name -> mangaplus_resp_app.Title
	4,  // 52: mangaplus_resp_app.TitleDetailView.sns:type_name -> mangaplus_resp_app.Sns
	3,  // 53: mangaplus_resp_app.TitleDetailView.rating:type_name -> mangaplus_resp_app.TitleDetailView.Rating
	5,  // 54: mangaplus_resp_app.TitleDetailView.titleBanners:type_name -> mangaplus_resp_app.Banner
	40, // 55: mangaplus_resp_app.TitleDetailView.allLanguage:type_name -> mangaplus_resp_app.TitleDetailView.AllLanguage
	41, // 56: mangaplus_resp_app.TitleDetailView.chapters:type_name -> mangaplus_resp_app.TitleDetailView.Chapters
	29, // 57: mangaplus_resp_app.ErrorResult.Item.button:type_name -> mangaplus_resp_app.ErrorResult.Item.Button
	0,  // 58: mangaplus_resp_app.ErrorResult.Item.language:type_name -> mangaplus_resp_app.Lang
	31, // 59: mangaplus_resp_app.MangaViewer.Page.page:type_name -> mangaplus_resp_app.MangaViewer.Page.MangaPage
	1,  // 60: mangaplus_resp_app.MangaViewer.Page.MangaPage.type:type_name -> mangaplus_resp_app.MangaViewer.Page.MangaPage.Type
	8,  // 61: mangaplus_resp_app.FreeTitlesView.Item.title:type_name -> mangaplus_resp_app.Title
	36, // 62: mangaplus_resp_app.HomeView.Update.items:type_name -> mangaplus_resp_app.HomeView.Update.Item
	38, // 63: mangaplus_resp_app.HomeView.Popup.resource:type_name -> mangaplus_resp_app.HomeView.Popup.Resource
	37, // 64: mangaplus_resp_app.HomeView.Update.Item.metadata:type_name -> mangaplus_resp_app.HomeView.Update.Item.Metadata
	8,  // 65: mangaplus_resp_app.HomeView.Update.Item.Metadata.title:type_name -> mangaplus_resp_app.Title
	0,  // 66: mangaplus_resp_app.HomeView.Update.Item.Metadata.language:type_name -> mangaplus_resp_app.Lang
	4,  // 67: mangaplus_resp_app.HomeView.Popup.Resource.sns:type_name -> mangaplus_resp_app.Sns
	5,  // 68: mangaplus_resp_app.FeaturedView.Featured.banner:type_name -> mangaplus_resp_app.Banner
	9,  // 69: mangaplus_resp_app.FeaturedView.Featured.category:type_name -> mangaplus_resp_app.Category
	0,  // 70: mangaplus_resp_app.TitleDetailView.AllLanguage.language:type_name -> mangaplus_resp_app.Lang
	7,  // 71: mangaplus_resp_app.TitleDetailView.Chapters.firstChapterList:type_name -> mangaplus_resp_app.Chapter
	7,  // 72: mangaplus_resp_app.TitleDetailView.Chapters.chapterList:type_name -> mangaplus_resp_app.Chapter
	7,  // 73: mangaplus_resp_app.TitleDetailView.Chapters.lastChapterList:type_name -> mangaplus_resp_app.Chapter
	74, // [74:74] is the sub-list for method output_type
	74, // [74:74] is the sub-list for method input_type
	74, // [74:74] is the sub-list for extension type_name
	74, // [74:74] is the sub-list for extension extendee
	0,  // [0:74] is the sub-list for field type_name
}

func init() { file_proto_mangaplus_resp_app_proto_init() }
func file_proto_mangaplus_resp_app_proto_init() {
	if File_proto_mangaplus_resp_app_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_mangaplus_resp_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Banner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Count); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Title); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribedTitlesView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankingView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MangaViewer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeTitlesView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingsView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeaturedView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TitleDetailView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResult_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResult_Item_Button); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MangaViewer_Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MangaViewer_Page_MangaPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileView_Icon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeTitlesView_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeView_Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeView_Popup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeView_Update_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeView_Update_Item_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeView_Popup_Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeaturedView_Featured); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TitleDetailView_AllLanguage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mangaplus_resp_app_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TitleDetailView_Chapters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_mangaplus_resp_app_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_mangaplus_resp_app_proto_goTypes,
		DependencyIndexes: file_proto_mangaplus_resp_app_proto_depIdxs,
		EnumInfos:         file_proto_mangaplus_resp_app_proto_enumTypes,
		MessageInfos:      file_proto_mangaplus_resp_app_proto_msgTypes,
	}.Build()
	File_proto_mangaplus_resp_app_proto = out.File
	file_proto_mangaplus_resp_app_proto_rawDesc = nil
	file_proto_mangaplus_resp_app_proto_goTypes = nil
	file_proto_mangaplus_resp_app_proto_depIdxs = nil
}
